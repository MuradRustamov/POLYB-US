import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {

    private static final Map<Character, String> cipherMap = new HashMap<>();
    private static final Map<String, Character> reverseCipherMap = new HashMap<>();

    static {
        String[] alphabet = {"A", "B", "C", "D", "E", "F", "G", "H", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"};
        int row = 1, col = 1;

        for (String letter : alphabet) {
            if (letter.equals("J")) {
                cipherMap.put('I', row + "" + col);
                reverseCipherMap.put(row + "" + col, 'I');
            } else {
                cipherMap.put(letter.charAt(0), row + "" + col);
                reverseCipherMap.put(row + "" + col, letter.charAt(0));
            }

            col++;
            if (col > 5) {
                col = 1;
                row++;
            }
        }
    }

    // Rəqəmləri əlifba sırasına uyğun hərflərə çevirmək
    private static String convertNumbersToLetters(String code) {
        StringBuilder converted = new StringBuilder();
        String[] codes = code.split(" ");
        for (String num : codes) {
            int index = Integer.parseInt(num) - 1; // 1-dən başlayır, ona görə 1 çıxarıram
            if (index >= 0 && index < 26) {
                converted.append((char) ('A' + index));
            }
        }
        return converted.toString();
    }

    public static String encrypt(String plaintext) {
        StringBuilder encrypted = new StringBuilder();
        plaintext = plaintext.toUpperCase().replaceAll("[^A-Z]", "");

        for (int i = 0; i < plaintext.length(); i++) {
            char ch = plaintext.charAt(i);
            encrypted.append(cipherMap.get(ch)).append(" ");
        }
        return encrypted.toString().trim();
    }

    public static String decrypt(String ciphertext) {
        StringBuilder decrypted = new StringBuilder();
        String[] codes = ciphertext.split(" ");

        for (String code : codes) {
            decrypted.append(reverseCipherMap.get(code));
        }

        return decrypted.toString();
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.println("Seçim edin:");
        System.out.println("1. Şifrələmə");
        System.out.println("2. Deşifrələmə");
        System.out.print("Seçiminizi daxil edin (1 və ya 2): ");
        
        int choice = scanner.nextInt();
        scanner.nextLine();  // Bu, sonrakı String girişini düzgün qəbul etmək üçündür.

        if (choice == 1) {
            System.out.print("Şifrələnəcək mətni daxil edin: ");
            String plaintext = scanner.nextLine();
            System.out.println("Şifrələnmiş mətn: " + encrypt(plaintext));
        } else if (choice == 2) {
            System.out.print("Deşifrələnəcək şifrəli mətni daxil edin (rəqəmlərlə ayrılmış): ");
            String ciphertext = scanner.nextLine();
            String decryptedText = decrypt(ciphertext);
            System.out.println("Deşifrələnmiş mətn: " + decryptedText);

            // Rəqəmləri əlifba sırasına görə çevirmək
            String convertedText = convertNumbersToLetters(decryptedText);
            System.out.println("Rəqəmlərdən Hərflərə Çevrilmiş Mətni: " + convertedText);
        } else {
            System.out.println("Yanlış seçim! Yalnız 1 və ya 2 daxil edə bilərsiniz.");
        }

        scanner.close();
    }
}
